"0","# Define the variables to test"
"0","variables_to_test <- c(""female"", ""couple"", ""dormant"", ""nonlit"", ""cases"", ""statecnt"", ""stateresponse"", ""red0"", ""blue0"", ""redcty"")"
"0",""
"0","# Initialize an empty data frame to store results"
"0","balance_table <- data.frame(Variable = character(),"
"0","                            T_Test_P_Value = numeric(),"
"0","                            Reg_Coefficient = numeric(),"
"0","                            Reg_P_Value = numeric(),"
"0","                            stringsAsFactors = FALSE)"
"0",""
"0","# Loop over variables"
"0","for (var in variables_to_test) {"
"0","  # T-Test"
"0","  t_test_result <- t.test(as.numeric(data[[var]]) ~ data$treatment)"
"0","  "
"0","  # Linear Regression"
"0","  reg_model <- lm(as.formula(paste(var, ""~ treatment"")), data = data)"
"0","  tidy_reg <- tidy(reg_model)"
"0","  "
"0","  # Extract coefficients and p-values"
"0","  reg_coefficient <- tidy_reg$estimate[2]  # treatment coefficient"
"0","  reg_p_value <- tidy_reg$p.value[2]  # p-value for treatment"
"0","  "
"0","  # Update the balance table"
"0","  balance_table <- rbind(balance_table, data.frame("
"0","    Variable = var,"
"0","    T_Test_P_Value = t_test_result$p.value,"
"0","    Reg_Coefficient = reg_coefficient,"
"0","    Reg_P_Value = reg_p_value"
"0","  ))"
"0","}"
"0",""
"0","# Print the balance table"
"0","#print(balance_table)"
"0","# Create the table using knitr and enhance it with kableExtra"
"0","kable_table <- kable(balance_table, format = ""html"", caption = ""Balance Test Results"") %>%"
"0","  kable_styling(bootstrap_options = c(""striped"", ""hover"", ""condensed""), full_width = FALSE) %>%"
"0","  column_spec(1, bold = TRUE, color = ""blue"") %>%  # Make the 'Variable' column bold and blue"
"0","  column_spec(2:4, background = ""#f7f7f7"")  # Apply a background color to the results columns"
"0",""
"0","# Print the table to display it in HTML format (useful for R Markdown or HTML reports)"
"0","kable_table"
